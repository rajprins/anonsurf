#!/bin/bash

### BEGIN INIT INFO
# Provides:          anonsurf
# Required-Start:
# Required-Stop:
# Should-Start:
# Default-Start:
# Default-Stop:
# Short-Description: Transparent Proxy through TOR.
### END INIT INFO


export BLUE='\033[1;94m'
export GREEN='\033[1;92m'
export RED='\033[1;91m'
export RESETCOLOR='\033[1;00m'

# Destinations you don't want routed through Tor
TOR_EXCLUDE="192.168.0.0/16 172.16.0.0/12 10.0.0.0/8"

# The UID Tor runs as
# change it if, starting tor, the command 'ps -e | grep tor' returns a different UID
TOR_UID="debian-tor"

# Tor's TransPort
TOR_PORT="9040"

# Is resolvconf installed?
if [[ ! -z `dpkg -l |grep resolvconf` ]]; then
	resolvconf_support=true;
else
	resolvconf_support=false;
fi



#-----------------------------------------------------------------------------
# Functions
#-----------------------------------------------------------------------------

### Stop common apps and deleting history/cookies/caches etc
function init {
	echo -e "${GREEN}>>>${BLUE} Killing caching applications${RESETCOLOR}"
	killall -q chrome dropbox iceweasel skype icedove thunderbird firefox chromium xchat transmission deluge pidgin pidgin.orig
	echo -e "${GREEN}>>>${BLUE} Cleaning application caches"
	bleachbit -c adobe_reader.cache chromium.cache chromium.current_session chromium.history elinks.history emesene.cache epiphany.cache firefox.url_history flash.cache flash.cookies google_chrome.cache google_chrome.history  links2.history opera.cache opera.search_history opera.url_history &> /dev/null
}


### Starting I2P services
function starti2p {
	echo -e "${GREEN}>>>${BLUE} Starting I2P services${RESETCOLOR}"
	service tor stop
	# Modify DNS settings
	if [ "$resolvconf_support" = false ]; then
		cp /etc/resolv.conf /etc/resolv.conf.bak;
		touch /etc/resolv.conf;
		echo -e 'nameserver 127.0.0.1\nnameserver 209.222.18.222\nnameserver 209.222.18.218' > /etc/resolv.conf;
		echo -e "${GREEN}[${BLUE}i${GREEN}]${BLUE} Modified resolv.conf to use localhost and Private Internet Access DNS.${RESETCOLOR}";
	else
		cp /etc/resolvconf/resolv.conf.d/head{,.bak};
		echo -e 'nameserver 127.0.0.1\nnameserver 209.222.18.222\nnameserver 209.222.18.218' >> /etc/resolvconf/resolv.conf.d/head;
		echo -e "${GREEN}[${BLUE}i${GREEN}]${BLUE} Modified resolvconf to use localhost and Private Internet Access DNS.${RESETCOLOR}";
		resolvconf -u;
	fi
	sudo -u i2psvc i2prouter start
	sleep 2
	xdg-open 'http://127.0.0.1:7657/home'
}


### Stopping I2P services and restoring DNS resolution settings
function stopi2p {
	echo -e "${GREEN}>>>${BLUE} Stopping I2P services${RESETCOLOR}"
	sudo -u i2psvc i2prouter stop

	# restore DNS settings
	if [ "$resolvconf_support" = false ]; then
		if [ -e /etc/resolv.conf.bak ]; then
			rm /etc/resolv.conf
			cp /etc/resolv.conf.bak /etc/resolv.conf
		fi
	else
		mv /etc/resolvconf/resolv.conf.d/head{.bak,}
		resolvconf -u
	fi
}


### Show IP address information
function ip {
	echo -e "${GREEN}>>>${BLUE} Getting IP address${RESETCOLOR}"
	myip=`curl -s "http://myexternalip.com/raw"`
	echo "IP Address: ${myip}"
	#
	if [[ -z "$(command -v curl)" ]] ; then
		echo "Error: curl command not installed. Cannot retrieve IP geo details"
	else
		echo -e "${GREEN}>>>${BLUE} Geo location details${RESETCOLOR}"
		if [[ -z "$(command -v xq)" ]] ; then
			curl -s curl -s http://ip-api.com/xml/${myip}?fields=135161
		else
			curl -s curl -s http://ip-api.com/xml/${myip}?fields=135161 | xq
		fi
	fi
}


### Show IP address information
function ipinfo {
   if [[ -z "$(command -v curl)" ]] ; then
      echo "Error: curl command not installed. Cannot retrieve IP geo details"
   else
   	myip=`curl -s "http://myexternalip.com/raw"`
		curl -s http://ip-api.com/xml/${myip}?fields=143353
   fi
}


### Start Tor service and route rules
function start {
	# Make sure only root can run this script
	if [ $(id -u) -ne 0 ]; then
		echo -e -e "${GREEN}[$RED!${GREEN}] $RED This script must be run as root.${RESETCOLOR}" >&2
		exit 1
	fi

	# Check defaults for Tor
	grep -q -x 'RUN_DAEMON="yes"' /etc/default/tor
	if [ $? -ne 0 ]; then
		echo -e "${GREEN}[$RED!${GREEN}]$RED Please add the following to your /etc/default/tor and restart service:${RESETCOLOR}" >&2
		echo -e "${BLUE}#----------------------------------------------------------------------#${RESETCOLOR}"
		echo -e 'RUN_DAEMON="yes"'
		echo -e "${BLUE}#----------------------------------------------------------------------#${RESETCOLOR}"
		exit 1
   fi
	
	# Kill IPv6 services
	echo -e "${GREEN}>>>${BLUE} Stopping IPv6 services${RESETCOLOR}"
	sed -i '/^.*\#anonsurf$/d' /etc/sysctl.conf #delete lines containing #anonsurf in /etc/sysctl.conf
	
	# add lines to sysctl.conf that will kill ipv6 services
	echo "net.ipv6.conf.all.disable_ipv6 = 1 #anonsurf" >> /etc/sysctl.conf
	echo "net.ipv6.conf.default.disable_ipv6=1 #anonsurf" >> /etc/sysctl.conf
	sysctl -p > /dev/null  # have sysctl reread /etc/sysctl.conf

	echo -e "${GREEN}>>>${BLUE} Starting anonymous mode${RESETCOLOR}"
	
	if [ ! -e /var/run/tor/tor.pid ]; then
		echo -e "$RED>>>${BLUE} Tor is not running. Starting${RESETCOLOR}" >&2
		service network-manager force-reload > /dev/null 2>&1
		killall dnsmasq > /dev/null 2>&1
		killall nscd > /dev/null 2>&1	
		service tor start
		sleep 1
	fi
	
	if ! [ -f /etc/network/iptables.rules ]; then
		iptables-save > /etc/network/iptables.rules
		echo -e "${GREEN}[${BLUE}i${GREEN}]${BLUE} Saved iptables rules.${RESETCOLOR}"
	fi
	
	iptables -F
	iptables -t nat -F
	
	if [ "$resolvconf_support" = false ] ; then
		cp /etc/resolv.conf /etc/resolv.conf.bak
		touch /etc/resolv.conf
		echo -e 'nameserver 127.0.0.1\nnameserver 209.222.18.222\nnameserver 209.222.18.218' > /etc/resolv.conf
		echo -e "${GREEN}[${BLUE}i${GREEN}]${BLUE} Modified resolv.conf to use Tor and Private Internet Access DNS.${RESETCOLOR}"
	else
		cp /etc/resolvconf/resolv.conf.d/head{,.bak}
      echo -e 'nameserver 127.0.0.1\nnameserver 209.222.18.222\nnameserver 209.222.18.218' >> /etc/resolvconf/resolv.conf.d/head
      echo -e "${GREEN}[${BLUE}i${GREEN}]${BLUE} Modified resolvconf to use localhost and Private Internet Access DNS.${RESETCOLOR}"
      resolvconf -u
	fi

	# set iptables nat
	iptables -t nat -A OUTPUT -m owner --uid-owner $TOR_UID -j RETURN
	iptables -t nat -A OUTPUT -p udp --dport 53 -j REDIRECT --to-ports 53
	iptables -t nat -A OUTPUT -p tcp --dport 53 -j REDIRECT --to-ports 53
	iptables -t nat -A OUTPUT -p udp -m owner --uid-owner $TOR_UID -m udp --dport 53 -j REDIRECT --to-ports 53
	
	#resolve .onion domains mapping 10.192.0.0/10 address space
	iptables -t nat -A OUTPUT -p tcp -d 10.192.0.0/10 -j REDIRECT --to-ports 9040
	iptables -t nat -A OUTPUT -p udp -d 10.192.0.0/10 -j REDIRECT --to-ports 9040
	
	#exclude local addresses
	for NET in $TOR_EXCLUDE 127.0.0.0/9 127.128.0.0/10; do
		iptables -t nat -A OUTPUT -d $NET -j RETURN
	done
	
	#redirect all other output through TOR
	iptables -t nat -A OUTPUT -p tcp --syn -j REDIRECT --to-ports $TOR_PORT
	iptables -t nat -A OUTPUT -p udp -j REDIRECT --to-ports $TOR_PORT
	iptables -t nat -A OUTPUT -p icmp -j REDIRECT --to-ports $TOR_PORT
	
	#accept already established connections
	iptables -A OUTPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
	
	#exclude local addresses
	for NET in $TOR_EXCLUDE 127.0.0.0/8; do
		iptables -A OUTPUT -d $NET -j ACCEPT
	done
	
	#allow only tor output
	iptables -A OUTPUT -m owner --uid-owner $TOR_UID -j ACCEPT
	iptables -A OUTPUT -j REJECT

	echo -e "${GREEN}[${BLUE}i${GREEN}]${BLUE} All traffic was redirected through Tor.${RESETCOLOR}"
	echo -e "${GREEN}[${BLUE}i${GREEN}]${BLUE} You are under AnonSurf tunnel!${RESETCOLOR}"
}


### Stop Tor service and route rules
function stop {
	# Make sure only root can run our script
	if [ $(id -u) -ne 0 ]; then
		echo -e "${GREEN}[$RED!${GREEN}] $RED This script must be run as root.${RESETCOLOR}" >&2
		exit 1
	fi
	echo -e "${GREEN}>>>${BLUE} Stopping anonymous mode${RESETCOLOR}"

	iptables -F
	iptables -t nat -F
	echo -e "${GREEN}[${BLUE}i${GREEN}]${BLUE} Deleted all iptables rules.${RESETCOLOR}"
	
	if [ -f /etc/network/iptables.rules ]; then
		iptables-restore < /etc/network/iptables.rules
		rm /etc/network/iptables.rules
		echo -e "${GREEN}[${BLUE}i${GREEN}]${BLUE} Iptables rules restored."
	fi
	
	# restore DNS settings
	if [ "$resolvconf_support" = false ]; then
		if [ -e /etc/resolv.conf.bak ]; then
			rm /etc/resolv.conf
			cp /etc/resolv.conf.bak /etc/resolv.conf
		fi
	else
		mv /etc/resolvconf/resolv.conf.d/head{.bak,}
		resolvconf -u
	fi
	
	service tor stop
	
	echo -e "${GREEN}>>>${BLUE} Reenabling IPv6 services${RESETCOLOR}"

	# reenable IPv6 services
	sed -i '/^.*\#anonsurf$/d' /etc/sysctl.conf #delete lines containing #anonsurf in /etc/sysctl.conf
	sysctl -p # have sysctl reread /etc/sysctl.conf

	service network-manager force-reload > /dev/null 2>&1
	service nscd start > /dev/null 2>&1
	service dnsmasq start > /dev/null 2>&1
	
	echo -e "${GREEN}[${BLUE}i${GREEN}]${BLUE} Anonymous mode stopped.${RESETCOLOR}"
}


### Reload Tor
function change {
	service tor reload
	sleep 2
	echo -e "${GREEN}[${BLUE}i${GREEN}]${BLUE} Tor daemon reloaded and forced to change nodes.${RESETCOLOR}"
}


### Show Tor's service status
function status {
	service tor status
}




#-----------------------------------------------------------------------------
# Main section
#-----------------------------------------------------------------------------


case "$1" in
	start)
		init
		start
	;;
	stop)
		init
		stop
	;;
	change)
		change
	;;
	status)
		status
	;;
	myip|ip)
		ip
	;;
	ipinfo)
      ipinfo
   ;;
	starti2p)
		starti2p
	;;
	stopi2p)
		stopi2p
	;;
	restart)
		$0 stop
		sleep 1
		$0 start
	;;
   *)
		echo -e "
AnonSurf anonymous browsing service
	Usage:
	anonsurf $RED{${GREEN}""start$RED|${GREEN}""stop$RED|${GREEN}""restart$RED|${GREEN}""change$RED""$RED|${GREEN}""status$RED""}

	$RED start${BLUE} -${GREEN} Start system-wide anonymous tunneling under TOR proxy through iptables
	$RED stop${BLUE} -${GREEN} Reset original iptables settings and return to clear navigation
	$RED restart${BLUE} -${GREEN} Combines \"stop\" and \"start\" options
	$RED change${BLUE} -${GREEN} Changes identity restarting TOR
	$RED status${BLUE} -${GREEN} Check if AnonSurf is working properly
	$RED ip${BLUE} -${GREEN} Show your current IP address
	----[ I2P related features ]----
	$RED starti2p${BLUE} -${GREEN} Start i2p services
	$RED stopi2p${BLUE} -${GREEN} Stop i2p services

${RESETCOLOR}" >&2
		exit 1
		;;
esac

echo -e ${RESETCOLOR}
exit 0
