#!/bin/bash

### BEGIN INIT INFO
# Provides:          anonsurf
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Transparent Proxy through TOR.
### END INIT INFO


export BLUE='\033[1;94m'
export GREEN='\033[1;92m'
export RED='\033[1;91m'
export RESETCOLOR='\033[1;00m'

# Destinations you don't want routed through Tor
TOR_EXCLUDE="192.168.0.0/16 172.16.0.0/12 10.0.0.0/8"

# The UID Tor runs as
# change it if, starting tor, the command 'ps -e | grep tor' returns a different UID
TOR_UID="debian-tor"

# Tor's TransPort
TOR_PORT="9040"

# Is resolvconf installed?
if [[ ! -z `dpkg -l | grep resolvconf` ]]; then
	resolvconf_support=true;
else
	resolvconf_support=false;
fi



#-----------------------------------------------------------------------------
# Functions
#-----------------------------------------------------------------------------

### Stop common apps and deleting history/cookies/caches etc
function cleanup {
	# Kill processes
	echo -e "${GREEN}>>>${BLUE} Killing running applications${RESETCOLOR}"
	killall -q chrome brave dropbox skype icedove thunderbird firefox firefox-esr chromium xchat hexchat transmission steam firejail /usr/lib/firefox-esr/firefox-esr
	# Remove caches
	echo -e "${GREEN}>>>${BLUE} Cleaning application caches"
	bleachbit -c adobe_reader.cache brave.session brave.history brave.form_history brave.cache chromium.session chromium.history chromium.form_history elinks.history emesene.cache epiphany.cache firefox.cache firefox.crash_reports firefox.url_history firefox.forms flash.cache flash.cookies google_chrome.cache google_chrome.history google_chrome.form_history google_chrome.search_engines google_chrome.session google_earth.temporary_files links2.history opera.cache opera.form_history opera.history &> /dev/null
}


### Show IP address information
function ip {
	echo -e "${GREEN}>>>${BLUE} Getting IP address${RESETCOLOR}"
	myip=$(curl -s icanhazip.com)
	echo "IP Address: ${myip}"
	#
	echo
	echo -e "${GREEN}>>>${BLUE} Geo location details${RESETCOLOR}"
	curl -s http://ip-api.com/xml/${myip}?fields=17960957
}


### Show IP address information (for GUI wrapper)
function ipinfo {
	MYIP=$(curl -s icanhazip.com)
	curl -s http://ip-api.com/xml/${MYIP}?fields=17960957
}


### Start Tor service and route rules
function start {
	# Check defaults for Tor
	grep -q -x 'RUN_DAEMON="yes"' /etc/default/tor
	if [ $? -ne 0 ]; then
		echo -e "${GREEN}[${RED}!${GREEN}}]${RED} Pease add the following to your /etc/default/tor and restart service:${RESETCOLOR}" >&2
		echo -e "${BLUE}#----------------------------------------------------------------------#${RESETCOLOR}"
		echo -e 'RUN_DAEMON="yes"'
		echo -e "${BLUE}#----------------------------------------------------------------------#${RESETCOLOR}"
		exit 1
   fi
	
	# Kill IPv6 services
	echo -e "${GREEN}>>>${BLUE} Disabling IPv6${RESETCOLOR}"
	if [ -f /etc/sysctl.conf ] ; then
		# delete lines containing #anonsurf in /etc/sysctl.conf
		sed -i '/^.*\#anonsurf$/d' /etc/sysctl.conf 
	fi
	# add lines to sysctl.conf that will kill ipv6 services
	echo "net.ipv6.conf.all.disable_ipv6 = 1 #anonsurf" >> /etc/sysctl.conf
	echo "net.ipv6.conf.default.disable_ipv6=1 #anonsurf" >> /etc/sysctl.conf
	# have sysctl reread /etc/sysctl.conf
	sysctl -p > /dev/null  
	

	echo -e "${GREEN}>>>${BLUE} Starting anonymous mode${RESETCOLOR}"
	if [ ! -e /var/run/tor/tor.pid ]; then
		echo -e "${RED}>>${BLUE} Tor is not running. Starting...${RESETCOLOR}" >&2
		service network-manager force-reload > /dev/null 2>&1
		killall dnsmasq > /dev/null 2>&1
		killall nscd > /dev/null 2>&1	
		service tor start
		sleep 1
	fi
	
	if ! [ -f /etc/network/iptables.rules ]; then
		iptables-save > /etc/network/iptables.rules
		echo -e "${GREEN}[${BLUE}i${GREEN}]${BLUE} Saved iptables rules.${RESETCOLOR}"
	fi
	
	iptables -F
	iptables -t nat -F
	
	if [ "$resolvconf_support" = false ] ; then
		cp /etc/resolv.conf /etc/resolv.conf.bak
		touch /etc/resolv.conf
		echo -e 'nameserver 127.0.0.1\nnameserver 209.222.18.222\nnameserver 209.222.18.218' > /etc/resolv.conf
		echo -e "${GREEN}[${BLUE}i${GREEN}]${BLUE} Modified resolv.conf to use Tor and Private Internet Access DNS.${RESETCOLOR}"
	else
		cp /etc/resolvconf/resolv.conf.d/head{,.bak}
      echo -e 'nameserver 127.0.0.1\nnameserver 209.222.18.222\nnameserver 209.222.18.218' > /etc/resolvconf/resolv.conf.d/head
      echo -e "${GREEN}[${BLUE}i${GREEN}]${BLUE} Modified resolvconf to use localhost and Private Internet Access DNS.${RESETCOLOR}"
      resolvconf -u
	fi

	# set iptables nat
	iptables -t nat -A OUTPUT -m owner --uid-owner $TOR_UID -j RETURN
	iptables -t nat -A OUTPUT -p udp --dport 53 -j REDIRECT --to-ports 53
	iptables -t nat -A OUTPUT -p tcp --dport 53 -j REDIRECT --to-ports 53
	iptables -t nat -A OUTPUT -p udp -m owner --uid-owner $TOR_UID -m udp --dport 53 -j REDIRECT --to-ports 53
	
	# resolve .onion domains mapping 10.192.0.0/10 address space
	iptables -t nat -A OUTPUT -p tcp -d 10.192.0.0/10 -j REDIRECT --to-ports 9040
	iptables -t nat -A OUTPUT -p udp -d 10.192.0.0/10 -j REDIRECT --to-ports 9040
	
	# exclude local addresses
	for NET in $TOR_EXCLUDE 127.0.0.0/9 127.128.0.0/10; do
		iptables -t nat -A OUTPUT -d $NET -j RETURN
	done
	
	# redirect all other output through TOR
	iptables -t nat -A OUTPUT -p tcp --syn -j REDIRECT --to-ports $TOR_PORT
	iptables -t nat -A OUTPUT -p udp -j REDIRECT --to-ports $TOR_PORT
	iptables -t nat -A OUTPUT -p icmp -j REDIRECT --to-ports $TOR_PORT
	
	# accept already established connections
	iptables -A OUTPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
	
	#exclude local addresses
	for NET in $TOR_EXCLUDE 127.0.0.0/8; do
		iptables -A OUTPUT -d $NET -j ACCEPT
	done
	
	# allow only tor output
	iptables -A OUTPUT -m owner --uid-owner $TOR_UID -j ACCEPT
	iptables -A OUTPUT -j REJECT

	echo -e "${GREEN}[${BLUE}i${GREEN}]${BLUE} All traffic was redirected through Tor.${RESETCOLOR}"
	echo -e "${GREEN}[${BLUE}i${GREEN}]${BLUE} You are under AnonSurf tunnel!${RESETCOLOR}"
}


### Stop Tor service and route rules
function stop {
	echo -e "${GREEN}>>>${BLUE} Stopping anonymous mode${RESETCOLOR}"

	iptables -F
	iptables -t nat -F
	echo -e "${GREEN}[${BLUE}i${GREEN}]${BLUE} Deleted all iptables rules.${RESETCOLOR}"
	
	if [ -f /etc/network/iptables.rules ]; then
		iptables-restore < /etc/network/iptables.rules
		rm /etc/network/iptables.rules
		echo -e "${GREEN}[${BLUE}i${GREEN}]${BLUE} Iptables rules restored."
	fi
	
	# restore DNS settings
	if [ "$resolvconf_support" = false ]; then
		if [ -e /etc/resolv.conf.bak ]; then
			rm /etc/resolv.conf
			cp /etc/resolv.conf.bak /etc/resolv.conf
		fi
	else
		mv /etc/resolvconf/resolv.conf.d/head{.bak,}
		resolvconf -u
	fi
	
	service tor stop
	
	echo -e "${GREEN}>>>${BLUE} Reenabling IPv6 services${RESETCOLOR}"

	# reenable IPv6 services
	sed -i '/^.*\#anonsurf$/d' /etc/sysctl.conf #delete lines containing #anonsurf in /etc/sysctl.conf
	sysctl -p # have sysctl reread /etc/sysctl.conf

	service network-manager force-reload > /dev/null 2>&1
	service nscd start > /dev/null 2>&1
	service dnsmasq start > /dev/null 2>&1
	
	echo -e "${GREEN}[${BLUE}i${GREEN}]${BLUE} Anonymous mode stopped.${RESETCOLOR}"
}


### Reload Tor
function change {
	service tor reload
	sleep 2
	echo -e "${GREEN}[${BLUE}i${GREEN}]${BLUE} Tor daemon reloaded and forced to change nodes.${RESETCOLOR}"
}


### Show Tor's service status
function status {
	service tor status
}


function checkDependencies {
	# Tor
	if ! [ -x "$(command -v tor)" ]; then
		echo 'Error: Tor is not installed.' >&2
		exit 1
	fi
	# iptables firewall
	if ! [ -x "$(command -v iptables)" ]; then
		echo 'Error: iptables is not installed.' >&2
		exit 1
	fi
	# Bleachbit
	if ! [ -x "$(command -v bleachbit)" ]; then
		echo 'Warning: bleachbit is not installed. Anonsurf will not be able to clean up your system.' >&2
	fi
	# Curl
	if ! [ -x "$(command -v curl)" ]; then
		echo 'Error: Curl is not installed.' >&2
		exit 1
	fi
}

function init {
   if [ $(id -u) -ne 0 ]; then
      echo "Sorry. Must be run as root or with sudo privileges."
      exit 1
   fi
   clear
}


#-----------------------------------------------------------------------------
# Main section
#-----------------------------------------------------------------------------

# Pre-flight checks
init
checkDependencies


# Main loop
case "$1" in
	start)
		cleanup
		start
	;;
	stop)
		cleanup
		stop
	;;
	change)
		change
	;;
	status)
		status
	;;
	ip)
		ip
   ;;
	ipinfo)
      ipinfo
   ;;
	restart)
		$0 stop
		sleep 1
		$0 start
	;;
   *)
		echo -e "
${BLUE}-----------------------------------------${RESETCOLOR}
${BLUE}AnonSurf - The anonymous browsing service${RESETCOLOR}
${BLUE}-----------------------------------------${RESETCOLOR}

   Usage:
   anonsurf ${RED}{${GREEN}""start${RED}|${GREEN}""stop${RED}|${GREEN}""restart${RED}|${GREEN}""change${RED}""${RED}|${GREEN}""status${RED}""|${GREEN}""ip${RED}""}

${RED}   start${BLUE} -${GREEN} Start system-wide anonymous tunneling under TOR proxy through iptables
${RED}   stop${BLUE} -${GREEN} Reset original iptables settings and return to clear navigation
${RED}   restart${BLUE} -${GREEN} Combines \"stop\" and \"start\" options
${RED}   change${BLUE} -${GREEN} Changes identity restarting TOR
${RED}   status${BLUE} -${GREEN} Check if AnonSurf is working properly
${RED}   ip${BLUE} -${GREEN} Show your current IP address

${RESETCOLOR}" >&2
		exit 1
		;;
esac

echo -e ${RESETCOLOR}
exit 0
